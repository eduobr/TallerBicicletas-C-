<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCarrito.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAADdAAAA3QFwU6IHAAAAGXRFWHRTb2Z0d2FyZQB3d3cu
        aW5rc2NhcGUub3Jnm+48GgAAA65JREFUWEfFl39MjHEcxw/dTzr6RRIpoelKSD9YpS6VCiWnLnFdaavI
        6iSbX2Nq/lH50Y+bmWQzZMwfGPMX5g82mv4wTVJJZdbMZuYP8/b9PHO3c33vdHHn2V57vs/n8/183u/n
        efb93nMiAP8VbtCV0DGJkSmRSGpdCWkK2j4+PheS1cmf62rr4EpIk7RFcrn8y8jQCE7VN6KmyoCaPdVO
        gfqPDn+AsbkFpxpPgjRJWySVSr+NfhyF1M0NB0IicDQm3imcVadjaMdutKesh1QshqDJtM0G3KVS9KRu
        ESY5G6VCMX4DT/P0uLXh3xpzyMBjzXYETp+BqmVRY3ITxSEDxJvCcsHEdJkMs6a5I8jDC6qZvoieMxeJ
        AUHIDF6MLSEqFKoisDMiEtUrYvBgcwG3F+GwAaIkfDkaCgox0nwO4fMCcNOwD0+OHsdUqQy39+5HrUaL
        UP+5OKMrRmRgEBrik7l9iAkZuLwuC+tU4fh0th35q+JwsbRCGCvlcuF8tcIATXSsMI4KCMT9bC23D2Hb
        QIqGW0D06XdCIZbAXSYXlhFB4mw3E84ylqOlTGM69xft4vYh7BoY1JVzi4jkwGBcr9yLDna3OVExvz2B
        g1k5OJytwaPDxxDh68etN2HXwIB2B7eIqFu9BmVJa9FZdwIq/3lmAwOnjdi6Og5FCUlYOMuXzUvk1puw
        a6Bvk45bRDzXFmGaRII8dvfiKVMQOtsPbpMnw89diSi2IrIXLUHTmlS8K67g1puwa+BNWi7e6/nv71La
        Riz1nonmxFTcyMzBk9xCDNh517awa4B4u3Ebt7A0bDnS5y/A/pWr7PKMPSlevYk/GiAGtCVjCmlt+yhn
        CKSwDchSlK5NuRNx6jG1lozLANG/WY8hi/d5LWMTvH+J0NiyKV1TnPJX2J5hmbNm3AaI3gwtBreVmotJ
        yFrcMteRns3NWeKQATNsl+zNzBdWSb9G/1co2WY2xgDtXk1LYwWx+rBoVC8McxqkZTagUCi+DL8fhrHV
        iLbzbUKCxocOHnIa1J80SVvk5eV1Xp2kdvlHKWmSNvstGf9nOXPclRCfgJLiEnh6en4Xi8VGgsYUoxzN
        4dVaQ5qCNu/Pgi38/fwftjS34kVnFyp27f7BhPsIGlOMcjSHV2sLbtAWHh4ePXfv3MPr7h68etmNM6eb
        BGhMMcrRHF6tLbhBa9iRxahkj/treVn5R0OV4QMPytEcmks1vF7WcIPWsEPHOOIgOl4va7hBV8INug6I
        fgIZdEardonznQAAAABJRU5ErkJggg==
</value>
  </data>
</root>