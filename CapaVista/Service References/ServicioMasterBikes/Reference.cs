//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CapaVista.ServicioMasterBikes {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioMasterBikes.IServicio")]
    public interface IServicio {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ImgToByteArray", ReplyAction="http://tempuri.org/IServicio/ImgToByteArrayResponse")]
        byte[] ImgToByteArray(string ruta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ImgToByteArray", ReplyAction="http://tempuri.org/IServicio/ImgToByteArrayResponse")]
        System.Threading.Tasks.Task<byte[]> ImgToByteArrayAsync(string ruta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/obtenerProdProv", ReplyAction="http://tempuri.org/IServicio/obtenerProdProvResponse")]
        CapaLogicaNegocios.ServicioMasterBikes.Cl_Producto[] obtenerProdProv();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/obtenerProdProv", ReplyAction="http://tempuri.org/IServicio/obtenerProdProvResponse")]
        System.Threading.Tasks.Task<CapaLogicaNegocios.ServicioMasterBikes.Cl_Producto[]> obtenerProdProvAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/obtenerProductos", ReplyAction="http://tempuri.org/IServicio/obtenerProductosResponse")]
        CapaLogicaNegocios.ServicioMasterBikes.Cl_Producto[] obtenerProductos();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/obtenerProductos", ReplyAction="http://tempuri.org/IServicio/obtenerProductosResponse")]
        System.Threading.Tasks.Task<CapaLogicaNegocios.ServicioMasterBikes.Cl_Producto[]> obtenerProductosAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/obtenerMunicipalidades", ReplyAction="http://tempuri.org/IServicio/obtenerMunicipalidadesResponse")]
        CapaLogicaNegocios.ServicioMasterBikes.Cl_Municipalidad[] obtenerMunicipalidades();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/obtenerMunicipalidades", ReplyAction="http://tempuri.org/IServicio/obtenerMunicipalidadesResponse")]
        System.Threading.Tasks.Task<CapaLogicaNegocios.ServicioMasterBikes.Cl_Municipalidad[]> obtenerMunicipalidadesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/obtenerConvenio", ReplyAction="http://tempuri.org/IServicio/obtenerConvenioResponse")]
        int obtenerConvenio(string municipalidad, string rut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/obtenerConvenio", ReplyAction="http://tempuri.org/IServicio/obtenerConvenioResponse")]
        System.Threading.Tasks.Task<int> obtenerConvenioAsync(string municipalidad, string rut);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/guardarImagen", ReplyAction="http://tempuri.org/IServicio/guardarImagenResponse")]
        bool guardarImagen(byte[] imagen, string nombreArchivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/guardarImagen", ReplyAction="http://tempuri.org/IServicio/guardarImagenResponse")]
        System.Threading.Tasks.Task<bool> guardarImagenAsync(byte[] imagen, string nombreArchivo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/obtenerStock", ReplyAction="http://tempuri.org/IServicio/obtenerStockResponse")]
        int obtenerStock(int idProducto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/obtenerStock", ReplyAction="http://tempuri.org/IServicio/obtenerStockResponse")]
        System.Threading.Tasks.Task<int> obtenerStockAsync(int idProducto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioChannel : CapaVista.ServicioMasterBikes.IServicio, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioClient : System.ServiceModel.ClientBase<CapaVista.ServicioMasterBikes.IServicio>, CapaVista.ServicioMasterBikes.IServicio {
        
        public ServicioClient() {
        }
        
        public ServicioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public byte[] ImgToByteArray(string ruta) {
            return base.Channel.ImgToByteArray(ruta);
        }
        
        public System.Threading.Tasks.Task<byte[]> ImgToByteArrayAsync(string ruta) {
            return base.Channel.ImgToByteArrayAsync(ruta);
        }
        
        public CapaLogicaNegocios.ServicioMasterBikes.Cl_Producto[] obtenerProdProv() {
            return base.Channel.obtenerProdProv();
        }
        
        public System.Threading.Tasks.Task<CapaLogicaNegocios.ServicioMasterBikes.Cl_Producto[]> obtenerProdProvAsync() {
            return base.Channel.obtenerProdProvAsync();
        }
        
        public CapaLogicaNegocios.ServicioMasterBikes.Cl_Producto[] obtenerProductos() {
            return base.Channel.obtenerProductos();
        }
        
        public System.Threading.Tasks.Task<CapaLogicaNegocios.ServicioMasterBikes.Cl_Producto[]> obtenerProductosAsync() {
            return base.Channel.obtenerProductosAsync();
        }
        
        public CapaLogicaNegocios.ServicioMasterBikes.Cl_Municipalidad[] obtenerMunicipalidades() {
            return base.Channel.obtenerMunicipalidades();
        }
        
        public System.Threading.Tasks.Task<CapaLogicaNegocios.ServicioMasterBikes.Cl_Municipalidad[]> obtenerMunicipalidadesAsync() {
            return base.Channel.obtenerMunicipalidadesAsync();
        }
        
        public int obtenerConvenio(string municipalidad, string rut) {
            return base.Channel.obtenerConvenio(municipalidad, rut);
        }
        
        public System.Threading.Tasks.Task<int> obtenerConvenioAsync(string municipalidad, string rut) {
            return base.Channel.obtenerConvenioAsync(municipalidad, rut);
        }
        
        public bool guardarImagen(byte[] imagen, string nombreArchivo) {
            return base.Channel.guardarImagen(imagen, nombreArchivo);
        }
        
        public System.Threading.Tasks.Task<bool> guardarImagenAsync(byte[] imagen, string nombreArchivo) {
            return base.Channel.guardarImagenAsync(imagen, nombreArchivo);
        }
        
        public int obtenerStock(int idProducto) {
            return base.Channel.obtenerStock(idProducto);
        }
        
        public System.Threading.Tasks.Task<int> obtenerStockAsync(int idProducto) {
            return base.Channel.obtenerStockAsync(idProducto);
        }
    }
}
